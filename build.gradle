plugins {
    id("io.micronaut.application") version "4.1.2"
    id("com.github.johnrengelman.shadow") version "8.1.1"
}

version = "0.1"
group = "org.eclipse.epsilon.labs.playground.fn.flexmi2plantuml"
def epsilon_version = "2.4.0"

repositories {
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

dependencies {
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    implementation("io.micronaut.serde:micronaut-serde-jackson")

    // For using regular Micronaut @Controller annotations to specify functions
    implementation("io.micronaut.gcp:micronaut-gcp-function-http")
    developmentOnly("com.google.cloud.functions:functions-framework-api")

    // To try out the functions locally via a Netty HTTP server
    developmentOnly("io.micronaut:micronaut-http-server-netty")

    // Basic logging
    runtimeOnly("ch.qos.logback:logback-classic")

    testImplementation("com.google.cloud.functions:functions-framework-api")
    testImplementation("io.micronaut:micronaut-http-client")

    // Epsilon dependencies
    implementation("org.eclipse.epsilon:org.eclipse.epsilon.flexmi:${epsilon_version}")
    implementation("org.eclipse.emf:org.eclipse.emf.ecore:2.23.0")
    implementation("org.eclipse.emf:org.eclipse.emf.ecore.xmi:2.16.0")
    implementation("org.eclipse.emfatic:org.eclipse.emfatic.core:1.1.0-SNAPSHOT")
	implementation("net.sourceforge.plantuml:plantuml:1.2022.14")
}


application {
    mainClass.set("org.eclipse.epsilon.labs.playground.fn.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

micronaut {
    runtime("google_function")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("org.eclipse.epsilon.labs.playground.fn.flexmi2plantuml.*")
    }
}



