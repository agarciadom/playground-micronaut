plugins {
    id 'io.micronaut.application'
    id 'com.gradleup.shadow'
    id 'io.micronaut.openapi'
    id 'backend.server-conventions'
}

dependencies {
    implementation(project(':shorturl-api'))

    annotationProcessor(mn.micronaut.serde.processor)
    implementation(mn.micronaut.serde.jackson)

    annotationProcessor(mn.micronaut.validation.processor)
    implementation(mn.validation)

    // Basic logging
    runtimeOnly(mn.logback.classic)

    // OpenAPI support
    annotationProcessor(mn.micronaut.openapi)
    compileOnly(mn.micronaut.openapi.annotations)

    // For testing the functions through the declarative HTTP client
    testImplementation(mn.micronaut.http.server.netty)
    testImplementation(mn.micronaut.http.client)

    // AWS SDK BOM + S3 support
    implementation(platform("software.amazon.awssdk:bom:2.29.27"))
    implementation("software.amazon.awssdk:s3")
    implementation("software.amazon.awssdk:sso")
    implementation("software.amazon.awssdk:ssooidc")
}

application {
    mainClass = "org.eclipse.epsilon.labs.playground.Application"
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("org.eclipse.epsilon.labs.playground.fn.*")
    }
}

tasks.named("dockerBuild") {
    images = ["ghcr.io/epsilonlabs/playground-backend:shorturl-s3"]
}
